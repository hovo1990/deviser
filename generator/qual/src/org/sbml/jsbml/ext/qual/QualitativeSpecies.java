# Generated by org.mangosdk.spi.processor.SpiProcessor (0.2.4)
# Sat, 25 Jun 2016 13:10:07 +0400
*
* ----------------------------------------------------------------------------
* 1. The University of Tuebingen, Germany
* 2. EMBL European Bioinformatics Institute (EBML-EBI), Hinxton, UK
* 3. The California Institute of Technology, Pasadena, CA, USA
* 4. The University of California, San Diego, La Jolla, CA, USA
* 5. The Babraham Institute, Cambridge, UK
* @author Deviser
* @date $Date: $
* @param constant
* @param id
* @param initialLevel
* @param level
* @param maxLevel
* @param name
* @param version
* @return
* @return false
* @return the constant
* @return the initialLevel
* @return the maxLevel
* @return {@code true} if the unset of the constant attribute was successful
* @return {@code true} if the unset of the initialLevel attribute was
* @return {@code true} if the unset of the maxLevel attribute was successful
* @see org.sbml.jsbml
* @see org.sbml.jsbml.CompartmentalizedSBase
* @since 1.2
* @version $Rev: 2465 $
* Copyright (C) 2009-2016 jointly by the following organizations:
* Generated serial version identifier.
* This file is part of JSBML. Please visit <http://sbml.org/Software/JSBML>
* This library is free software; you can redistribute it and/or modify it
* and also available online as <http://sbml.org/Software/JSBML/License>.
* for the latest version of JSBML and more information about SBML.
* in the file named "LICENSE.txt" included with this software distribution
* successful
* the Free Software Foundation. A copy of the license agreement is provided
* under the terms of the GNU Lesser General Public License as published b
*/
/*
/* (non-Javadoc)
/* Sets the value of the "compartment" attribute of this QualitativeSpecies.
/**
@Override
Boolean oldConstant = constant;
Boolean oldConstant = this.constant;
Integer oldInitialLevel = initialLevel;
Integer oldInitialLevel = this.initialLevel;
Integer oldMaxLevel = maxLevel;
Integer oldMaxLevel = this.maxLevel;
String oldCompartment = this.compartment;
compartment = null;
compartment);
constant = null;
firePropertyChange(QualConstants.compartment, oldCompartment,
firePropertyChange(QualConstants.constant, oldConstant, constant);
firePropertyChange(QualConstants.constant, oldConstant, this.constant);
firePropertyChange(QualConstants.initialLevel, oldInitialLevel,
firePropertyChange(QualConstants.maxLevel, oldMaxLevel, maxLevel);
firePropertyChange(QualConstants.maxLevel, oldMaxLevel, this.maxLevel);
if ((compartment == null) || (compartment.isEmpty())) {
if (compartment != null) {
if (compartment != this.compartment) {
if (getLevelAndVersion().compareTo(Integer.valueOf(3), Integer.valueOf(1)) < 0) {
if (isSetCompartment()) {
if (isSetConstant()) {
if (isSetInitialLevel()) {
if (isSetMaxLevel()) {
import java.util.Map;
import org.sbml.jsbml.*;
import org.sbml.jsbml.util.*;
import org.sbml.jsbml.util.filters.*;
initDefaults();
initialLevel = null;
initialLevel);
maxLevel = null;
package org.sbml.jsbml.ext.qual;
packageName = QualConstants.shortLabel;
private Boolean constant;
private Integer initialLevel;
private Integer maxLevel;
private String compartment;
private static final long serialVersionUID = -6048861420699176889L;
public QualitativeSpecies clone() {
public QualitativeSpecies() {
public QualitativeSpecies(String id) {
public QualitativeSpecies(String id, String name, int level, int version) {
public QualitativeSpecies(String id, int level, int version) {
public QualitativeSpecies(int level, int version) {
public String getCompartment() {
public boolean getConstant() {
public boolean isCompartmentMandatory() {
public boolean isIdMandatory() {
public boolean isInitialLevelMandatory() {
public boolean isSetCompartment() {
public boolean isSetConstant() {
public boolean isSetInitialLevel() {
public boolean isSetMaxLevel() {
public boolean setCompartment(Compartment compartment) {
public boolean setCompartment(String compartment) {
public boolean unsetCompartment() {
public boolean unsetConstant() {
public boolean unsetInitialLevel() {
public boolean unsetMaxLevel() {
public class QualitativeSpecies extends AbstractNamedSBase implements CompartmentalizedSBase, UniqueNamedSBase {
public int getInitialLevel() {
public int getMaxLevel() {
public void initDefaults() {
public void setConstant(boolean constant) {
public void setInitialLevel(int initialLevel) {
public void setMaxLevel(int maxLevel) {
return compartment != null;
return constant != null;
return constant.booleanValue();
return false;
return initialLevel != null;
return initialLevel.intValue();
return isSetCompartment() ? compartment : "";
return maxLevel != null;
return maxLevel.intValue();
return new QualitativeSpecies(this);
return setCompartment(compartment.getId());
return true;
return unsetCompartment();
setPackageVersion(-1);
super();
super(id);
super(id, name, level, version);
this(id, null, level, version);
this(null, null, level, version);
this.compartment = compartment;
this.compartment = null;
this.constant = constant;
this.initialLevel = initialLevel;
this.initialLevel);
this.maxLevel = maxLevel;
this.oldCompartment);
throw new LevelVersionError(getElementName(), level, version);
throw new PropertyUndefinedError(QualConstants.constant, this);
throw new PropertyUndefinedError(QualConstants.initialLevel, this);
throw new PropertyUndefinedError(QualConstants.maxLevel, this);
}
} else {
